<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lpq.mail.dao.MailAccountInfoDao">
  <resultMap id="BaseResultMap" type="com.lpq.mail.entity.MailAccountInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="mail_account" jdbcType="VARCHAR" property="mailAccount" />
    <result column="mail_password" jdbcType="VARCHAR" property="mailPassword" />
    <result column="mail_address" jdbcType="VARCHAR" property="mailAddress" />
    <result column="mail_port" jdbcType="VARCHAR" property="mailPort" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, mail_account, mail_password, mail_address, mail_port
  </sql>
  <select id="selectByExample" parameterType="com.lpq.mail.entity.MailAccountInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mail_account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mail_account_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mail_account_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lpq.mail.entity.MailAccountInfoExample">
    delete from mail_account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lpq.mail.entity.MailAccountInfo" useGeneratedKeys="true">
    insert into mail_account_info (user_id, mail_account, mail_password, 
      mail_address, mail_port)
    values (#{userId,jdbcType=INTEGER}, #{mailAccount,jdbcType=VARCHAR}, #{mailPassword,jdbcType=VARCHAR}, 
      #{mailAddress,jdbcType=VARCHAR}, #{mailPort,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.lpq.mail.entity.MailAccountInfo" useGeneratedKeys="true">
    insert into mail_account_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="mailAccount != null">
        mail_account,
      </if>
      <if test="mailPassword != null">
        mail_password,
      </if>
      <if test="mailAddress != null">
        mail_address,
      </if>
      <if test="mailPort != null">
        mail_port,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="mailAccount != null">
        #{mailAccount,jdbcType=VARCHAR},
      </if>
      <if test="mailPassword != null">
        #{mailPassword,jdbcType=VARCHAR},
      </if>
      <if test="mailAddress != null">
        #{mailAddress,jdbcType=VARCHAR},
      </if>
      <if test="mailPort != null">
        #{mailPort,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lpq.mail.entity.MailAccountInfoExample" resultType="java.lang.Long">
    select count(*) from mail_account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mail_account_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.mailAccount != null">
        mail_account = #{record.mailAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.mailPassword != null">
        mail_password = #{record.mailPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.mailAddress != null">
        mail_address = #{record.mailAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.mailPort != null">
        mail_port = #{record.mailPort,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mail_account_info
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      mail_account = #{record.mailAccount,jdbcType=VARCHAR},
      mail_password = #{record.mailPassword,jdbcType=VARCHAR},
      mail_address = #{record.mailAddress,jdbcType=VARCHAR},
      mail_port = #{record.mailPort,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lpq.mail.entity.MailAccountInfo">
    update mail_account_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="mailAccount != null">
        mail_account = #{mailAccount,jdbcType=VARCHAR},
      </if>
      <if test="mailPassword != null">
        mail_password = #{mailPassword,jdbcType=VARCHAR},
      </if>
      <if test="mailAddress != null">
        mail_address = #{mailAddress,jdbcType=VARCHAR},
      </if>
      <if test="mailPort != null">
        mail_port = #{mailPort,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lpq.mail.entity.MailAccountInfo">
    update mail_account_info
    set user_id = #{userId,jdbcType=INTEGER},
      mail_account = #{mailAccount,jdbcType=VARCHAR},
      mail_password = #{mailPassword,jdbcType=VARCHAR},
      mail_address = #{mailAddress,jdbcType=VARCHAR},
      mail_port = #{mailPort,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>